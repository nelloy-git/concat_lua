{
    "Class.new":{
        "prefix": "createClass",
        "body": [
            "--=========",
            "-- Include",
            "--=========",
            "",
            "local Class = require('utils.Class.Class')",
            "local Log = require('utils.Log')",
            "",
            "--=======",
            "-- Class",
            "--=======",
            "",
            "local ${1:className} = Class.new('${1:className}')",
            "---@class ${1:className}",
            "local public = ${1:className}.public",
            "---@class ${1:className}Class",
            "local static = ${1:className}.static",
            "local override = ${1:className}.override",
            "local private = {}",
            "",
            "--=========",
            "-- Static",
            "--=========",
            "",
            "---@param child_data ${1:className} | nil",
            "---@return ${1:className}",
            "function static.new(child_data)",
            "    local instance = child_data or Class.allocate(${1:className}, child_data)",
            "    local priv = private.newData(instance)",
            "",
            "    return instance",
            "end",
            "",
            "--========",
            "-- Public",
            "--========",
            "",
            "function public:free()",
            "    private.freeData(self)",
            "    Class.freeInstanceData(self)",
            "end",
            "",
            "--=========",
            "-- Private",
            "--=========",
            "",
            "---@param self ${1:className}",
            "---@return table",
            "function private.new(self)",
            "    local priv = {",
            "    }",
            "    private[self] = priv",
            "    return priv",
            "end",
            "",
            "---@param self ${1:className}",
            "function private.freeData(self)",
            "    private[self] = nil",
            "end",
            "",
            "return ${1:className}"
        ]
    },
}